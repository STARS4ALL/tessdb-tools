-- ------------------------------------------------------------------------
{% if classification == 'easy' -%}
-- NEW LOCATION INSERTION PART {{ row['name'] }} ({{ classification }})
{% elif classification == 'renamed' -%}
-- NAMES HISTORY FOR '{{ mac }}':
{% for history in names_history -%}
-- {{ history['name'] }}	{{ history['valid_since'] }}	{{ history['valid_until'] }}	{{ history['valid_state'] }}
{% endfor -%}
{% elif classification == 'repaired' -%}
-- MAC HISTORY FOR '{{ name }}':
{% for history in macs_history -%}
-- {{ history['mac'] }}		{{ history['valid_since'] }}	{{ history['valid_until'] }}	{{ history['valid_state'] }}
{% endfor -%}
{% else -%}
-- THIS NEEDS TO BE DONE YET ....
{% endif -%}
-- ------------------------------------------------------------------------
.echo on
-- CREATE INDEX tess_id_readings_i ON tess_readings_t(tess_id);
PRAGMA foreign_keys = OFF;
BEGIN TRANSACTION;

-- Inserts new Location
INSERT OR IGNORE INTO location_t (longitude,latitude,elevation,timezone,place,town,sub_region,region,country,organization,contact_email)
VALUES ({{row['longitude']}},{{row['latitude']}},{{row['masl']|default(0)}},{{row['timezone']}},{{row['place']}},{{row['town']}},{{row['sub_region']}},{{row['region']}},{{row['country']}},{{row['org_name']}},{{row['org_email']}});

-- Updates photometer's current location from former location_id = {{ row['location_id'] }}
UPDATE tess_t
SET location_id = (SELECT location_id FROM location_t WHERE longitude = {{row['longitude']}} AND latitude = {{row['latitude']}})
WHERE mac_address = '{{row['mac']}}';

-- Updates past readings with the former location id
UPDATE tess_readings_t
SET location_id = (SELECT location_id FROM location_t WHERE longitude = {{row['longitude']}} AND latitude = {{row['latitude']}})
WHERE tess_id IN ({{ ','.join( row['tess_ids']) }});

COMMIT;
PRAGMA foreign_keys = ON;
--